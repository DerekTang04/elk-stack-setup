version: "3.8"

volumes:
  esdata01:
    driver: local
  kibanadata:
    driver: local
  logstashdata01:
    driver: local
  filebeatdata01:
    driver: local

networks:
  default:
    name: elastic
    external: false

services:
  es01_setup:
    build:
      context: ./setup/es-config
      dockerfile: dockerfile
      args:
        es_version: ${DSTACK_VERSION}
    volumes:
      - "./setup/es-config/api-payloads:/usr/share/elasticsearch/config/api-payloads"
    environment:
      - ELASTIC_PASSWORD=${DELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${DKIBANA_PASSWORD}
      - LOGSTASH_PASSWORD=${DLOGSTASH_PASSWORD}
      - LOGSTASH_INDEX_PAT=${DLOGSTASH_INDEX_PAT}
    command: >
      bash -c '
        until curl http://es01:9200 2>&1 | grep -qi "missing authentication credentials for REST request"; do sleep 5; done;
        
        echo "setting password for kibana_system";
        TEMP="$(envsubst < config/api-payloads/set-kbn-pass.json | jq -cM .)";
        until curl -s -X POST -u "elastic:$${ELASTIC_PASSWORD}" -H "Content-Type: application/json" -d "$${TEMP}" http://es01:9200/_security/user/kibana_system/_password; do sleep 5; done;
        
        echo "creating logstash index template";
        TEMP="$(envsubst < config/api-payloads/set-ls-index-template.json | jq -cM .)";
        until curl -s -X PUT -u "elastic:$${ELASTIC_PASSWORD}" -H "Content-Type: application/json" -d "$${TEMP}" http://es01:9200/_index_template/logstash-index-template; do sleep 5; done;

        echo "creating logstash_writer role";
        TEMP="$(envsubst < config/api-payloads/add-ls-writter-role.json | jq -cM .)";
        until curl -s -X POST -u "elastic:$${ELASTIC_PASSWORD}" -H "Content-Type: application/json" -d "$${TEMP}" http://es01:9200/_security/role/logstash_writer; do sleep 5; done;
        
        echo "creating logstash_internal user with logstash_writer role";
        TEMP="$(envsubst < config/api-payloads/add-ls-internal-user.json | jq -cM .)";
        until curl -s -X POST -u "elastic:$${ELASTIC_PASSWORD}" -H "Content-Type: application/json" -d "$${TEMP}" http://es01:9200/_security/user/logstash_internal; do sleep 5; done;

        echo "elasticsearch setup done";
      '

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${DSTACK_VERSION}
    user: elasticsearch:1005
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - "./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "./certs/ca:/usr/share/elasticsearch/config/certs/ca"
      - "./certs/es01:/usr/share/elasticsearch/config/certs/es01"
    environment:
      - ELASTIC_PASSWORD=${DELASTIC_PASSWORD}
    mem_limit: 4g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 | grep -q 'missing authentication credentials for REST request'"]
      interval: 10s
      timeout: 10s
      retries: 120
      start_period: 30s

  kibana:
    depends_on:
      es01_setup:
        condition: service_completed_successfully      
    image: docker.elastic.co/kibana/kibana:${DSTACK_VERSION}
    user: root:1005
    volumes:
      - kibanadata:/usr/share/kibana/data
      - "/etc/letsencrypt:/etc/letsencrypt"  
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    environment:
      - ELASTICSEARCH_HOSTS=http://${DELASTICSEARCH_HOSTS}
      - KIBANA_PASSWORD=${DKIBANA_PASSWORD}
      - SEC_ENC_KEY=${DSEC_ENC_KEY}
      - SAVED_OBJ_ENC_KEY=${DSAVED_OBJ_ENC_KEY}
      - REPORT_ENC_KEY=${DREPORT_ENC_KEY}
    ports:
      - ${DKIBANA_PORT}:5601
      - 443:5601
    mem_limit: 2g
    command: [ "/usr/local/bin/kibana-docker", "--allow-root" ]

  logstash01:
    depends_on:
      es01_setup:
        condition: service_completed_successfully 
    build:
      context: ./setup/ls-config
      dockerfile: dockerfile
      args:
        ls_version: ${DSTACK_VERSION}
    user: root:1005
    volumes:
      - logstashdata01:/usr/share/logstash/data
      - "./logstash.yml:/usr/share/logstash/config/logstash.yml"
      - "./logstash-pipeline.conf:/usr/share/logstash/pipeline/logstash.conf"
      - "./setup/ls-config/patterns:/usr/share/logstash/pipeline/patterns"
      - "./setup/ls-config/ips_with_usage_types.csv:/ips.csv"
    environment:
      - ELASTICSEARCH_HOSTS=http://${DELASTICSEARCH_HOSTS}
      - LOGSTASH_PASSWORD=${DLOGSTASH_PASSWORD}
    mem_limit: 2g

  filebeat01:
    depends_on:
      es01:
        condition: service_healthy
    build:
      context: ./setup/fb-config
      dockerfile: dockerfile
      args:
        fb_version: ${DSTACK_VERSION}
    user: root:1005
    volumes:
      - filebeatdata01:/usr/share/filebeat/data
      - "/var/elk-stack/filebeat_ingest_data/:/usr/share/filebeat/ingest_data/"
      - "./scripts/start_filebeat:/usr/share/filebeat/start_filebeat"
      - "./scripts/clear_logs:/etc/cron.daily/clear_logs"
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml"
    environment:
      - LOGSTASH_HOSTS=${DLOGSTASH_HOSTS}
    command: [ "start_filebeat" ]
