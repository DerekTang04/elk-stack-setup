- name: Launch ELK server
  hosts: localhost
  connection: local
  gather_facts: false
  module_defaults:
    group/aws:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      region: us-east-1
  tasks:
    - name: Read user data
      ansible.builtin.set_fact:
        user_data: "{{ lookup('file', './user_data.sh') }}"

    - name: Launch instance
      amazon.aws.ec2_instance:
        cpu_credit_specification: standard
        exact_count: 1
        ebs_optimized: true
        iam_instance_profile: arn:aws:iam::851227637779:instance-profile/ELKServerRole
        image_id: ami-07d9b9ddc6cd8dd30
        instance_type: t3a.micro
        key_name: elk-temp
        name: ELK Ansible
        security_groups: [sg-07a8bd89f114dd362, sg-0811a168f9aae44a0]
        user_data: "{{ user_data }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_type: gp3
              volume_size: 8
              delete_on_termination: true
        vpc_subnet_id: subnet-f7685bdf
      register: ec2

    - name: EC2 response
      ansible.builtin.debug:
        var: ec2

    - name: Associate EIP
      amazon.aws.ec2_eip:
        allow_reassociation: true
        device_id: "{{ ec2.instance_ids[0] }}"
        public_ip: 18.215.40.150
      register: eip

    - name: EIP response
      ansible.builtin.debug:
        var: eip


# - name: Setup ELK server
#   hosts: elk.reactome.org
#   tasks:
#     - name: Wait for setup to finish
#       ansible.builtin.wait_for:
#         path: /var/log/cloud-init-output.log
#         search_regex: 'Cloud-init .* finished'
#         # delay: 350

#     - name: Copy file
#       ansible.builtin.copy:
#         src: /path/to/local/file.txt
#         dest: /opt/file.txt
